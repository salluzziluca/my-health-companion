# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config

# Etapa 1: build de la app React
FROM node:16-alpine AS build
WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Etapa 2: nginx para servir archivos estáticos
FROM nginx:alpine
COPY --from=build /app/build /usr/share/nginx/html

# Opcional: elimina archivos por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Agrega tu propia config
